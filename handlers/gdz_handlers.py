from utils import *

from aiogram import Router, Bot
from aiogram.filters import Command, CommandObject
from aiogram.types import Message
from aiogram.utils.media_group import MediaGroupBuilder

db = Database()
gdz_router = Router()


@gdz_router.message(Command('algebra'))
async def cmd_algebra(message: Message, command: CommandObject, bot: Bot):
    try:
        if not command.args:
            return await message.reply('–ù–µ—Ç –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤!')
        if not command.args.isnumeric():
            return await message.reply('–ê—Ä–≥—É–º–µ–Ω—Ç - –Ω–µ —á–∏—Å–ª–æ!')

        args = command.args.split()
        if len(args) > 1:
            return await message.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø—Ä–∞—à–∏–≤–∞–π—Ç–µ —Ç–æ–ª—å–∫–æ 1 –∑–∞–¥–∞–Ω–∏–µ –≤ 1 —Å–æ–æ–±—â–µ–Ω–∏–∏.')

        await message.reply_media_group(get_algebra(args[0]).build())

    except Exception as e:
        await error_admin(bot, message, e)


@gdz_router.message(Command('geometry'))
async def cmd_geometry(message: Message, command: CommandObject, bot: Bot):
    try:
        if not command.args:
            return await message.reply('–ù–µ—Ç –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤!')
        if not command.args.isnumeric():
            return await message.reply('–ê—Ä–≥—É–º–µ–Ω—Ç - –Ω–µ —á–∏—Å–ª–æ!')

        args = command.args.split()
        if len(args) > 1:
            return await message.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø—Ä–∞—à–∏–≤–∞–π—Ç–µ —Ç–æ–ª—å–∫–æ 1 –∑–∞–¥–∞–Ω–∏–µ –≤ 1 —Å–æ–æ–±—â–µ–Ω–∏–∏.')

        await message.reply_media_group(get_geometry(args[0]).build())
    except Exception as e:
        await error_admin(bot, message, e)


@gdz_router.message(Command('physics'))
async def cmd_physics(message: Message, command: CommandObject, bot: Bot):
    try:
        if not command.args or len(command.args.split()) == 1:
            return await message.reply('–ù–µ—Ç –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤! –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: <code>/physics –Ω–æ–º–µ—Ä –ø–∞—Ä/—É–ø—Ä/–∑–∞–¥/–ª–∞–±/–æ–±—Å/'
                                       '–∑–∞–¥–∞—á–∞ *–ø–æ–¥–Ω–æ–º–µ—Ä</code>\n'
                                       '–ü–æ—è—Å–Ω–µ–Ω–∏—è: \n'
                                       '–ø–∞—Ä-–ø–∞—Ä–∞–≥—Ä–∞—Ñ. /physics –Ω–æ–º–µ—Ä –ø–∞—Ä\n'
                                       '—É–ø—Ä-—É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ. /physics –Ω–æ–º–µ—Ä —É–ø—Ä –ø–æ–¥–Ω–æ–º–µ—Ä\n'
                                       '–∑–∞–¥-–∑–∞–¥–∞–Ω–∏–µ. /physics –Ω–æ–º–µ—Ä_–ø–∞—Ä–∞–≥—Ä–∞—Ñ–∞ –∑–∞–¥\n'
                                       '–ª–∞–±-–ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞. /physics –Ω–æ–º–µ—Ä –ª–∞–±\n'
                                       '–æ–±—Å-–æ–±—Å—É–¥–∏ —Å —Ç–æ–≤–∞—Ä–∏—â–∞–º–∏. /physics –Ω–æ–º–µ—Ä_–ø–∞—Ä–∞–≥—Ä–∞—Ñ–∞ –æ–±—Å\n'
                                       '–∑–∞–¥–∞—á–∞-–∑–∞–¥–∞—á–∞ –¥–ª—è –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è. /physics –Ω–æ–º–µ—Ä –∑–∞–¥–∞—á–∞')
        args = command.args.split()

        if not args[0].isnumeric():
            return await message.reply('–ü–µ—Ä–≤—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç - –Ω–µ —á–∏—Å–ª–æ!')

        if len(args) == 3 and not args[2].isnumeric():
            return await message.reply('–¢—Ä–µ—Ç–∏–π –∞—Ä–≥—É–º–µ–Ω—Ç - –Ω–µ —á–∏—Å–ª–æ!')

        if len(args) > 3:
            return await message.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø—Ä–∞—à–∏–≤–∞–π—Ç–µ —Ç–æ–ª—å–∫–æ 1 –∑–∞–¥–∞–Ω–∏–µ –≤ 1 —Å–æ–æ–±—â–µ–Ω–∏–∏. ')

        if args[1] not in ['–ø–∞—Ä', '—É–ø—Ä', '–∑–∞–¥', '–ª–∞–±', '–æ–±—Å', '–∑–∞–¥–∞—á–∞']:
            return await message.reply(
                '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: <code>/physics –Ω–æ–º–µ—Ä –ø–∞—Ä/—É–ø—Ä/–∑–∞–¥/–ª–∞–±/–æ–±—Å/'
                '–∑–∞–¥–∞—á–∞ *–ø–æ–¥–Ω–æ–º–µ—Ä</code>\n'
                '–ü–æ—è—Å–Ω–µ–Ω–∏—è: \n'
                '–ø–∞—Ä-–ø–∞—Ä–∞–≥—Ä–∞—Ñ. /physics –Ω–æ–º–µ—Ä –ø–∞—Ä\n'
                '—É–ø—Ä-—É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ. /physics –Ω–æ–º–µ—Ä —É–ø—Ä –ø–æ–¥–Ω–æ–º–µ—Ä\n'
                '–∑–∞–¥-–∑–∞–¥–∞–Ω–∏–µ. /physics –Ω–æ–º–µ—Ä_–ø–∞—Ä–∞–≥—Ä–∞—Ñ–∞ –∑–∞–¥\n'
                '–ª–∞–±-–ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞. /physics –Ω–æ–º–µ—Ä –ª–∞–±\n'
                '–æ–±—Å-–æ–±—Å—É–¥–∏ —Å —Ç–æ–≤–∞—Ä–∏—â–∞–º–∏. /physics –Ω–æ–º–µ—Ä_–ø–∞—Ä–∞–≥—Ä–∞—Ñ–∞ –æ–±—Å\n'
                '–∑–∞–¥–∞—á–∞-–∑–∞–¥–∞—á–∞ –¥–ª—è –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è. /physics –Ω–æ–º–µ—Ä –∑–∞–¥–∞—á–∞')

        builder = MediaGroupBuilder(
            caption=f'–í–æ—Ç –≤–∞—à–µ –ì–î–ó –ø–æ –§–∏–∑–∏–∫–µ',
        )

        try:
            match args[1]:
                case '–ø–∞—Ä':
                    builder = findgdz(f'https://megaresheba.ru/index/05/0-358/{args[0]}',
                                      'https://megaresheba.ru/attachments/images/tasks/000/003/672/0000/654b5',
                                      f'–í–æ—Ç –≤–∞—à–µ –≥–¥–∑ –¥–ª—è {args[0]} –ø–∞—Ä–∞–≥—Ä–∞—Ñ–∞ –ø–æ –§–∏–∑–∏–∫–µ')
                case '—É–ø—Ä':
                    builder = findgdz(f'https://megaresheba.ru/index/05/0-358/2-{args[0]}-{args[2]}',
                                      'https://megaresheba.ru/attachments/images/tasks/000/003/672/0000/654b5',
                                      f'–í–æ—Ç –≤–∞—à–µ –≥–¥–∑ –¥–ª—è {args[0]} —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –ø–æ–¥–Ω–æ–º–µ—Ä {args[2]} –ø–æ –§–∏–∑–∏–∫–µ')
                case '–∑–∞–¥':
                    builder = findgdz(f'https://megaresheba.ru/index/05/0-358/3-{args[0]}',
                                      'https://megaresheba.ru/attachments/images/tasks/000/003/672/0000/654b5',
                                      f'–í–æ—Ç –≤–∞—à–µ –≥–¥–∑ –¥–ª—è –∑–∞–¥–∞–Ω–∏—è –∏–∑ –ø–∞—Ä–∞–≥—Ä–∞—Ñ–∞ {args[0]} –ø–æ –§–∏–∑–∏–∫–µ')
                case '–ª–∞–±':
                    builder = findgdz(f'https://megaresheba.ru/index/05/0-358/5-{args[0]}',
                                      'https://megaresheba.ru/attachments/images/tasks/000/003/672/0000/654b5',
                                      f'–í–æ—Ç –≤–∞—à–µ –≥–¥–∑ –¥–ª—è –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–æ–π —Ä–∞–±–æ—Ç—ã {args[0]} –ø–æ –§–∏–∑–∏–∫–µ')
                case '–æ–±—Å':
                    builder = findgdz(f'https://megaresheba.ru/index/05/0-358/6-{args[0]}',
                                      'https://megaresheba.ru/attachments/images/tasks/000/003/672/0000/654b5',
                                      f'–í–æ—Ç –≤–∞—à–µ –≥–¥–∑ –¥–ª—è "–æ–±—Å—É–¥–∏ —Å —Ç–æ–≤–∞—Ä–∏—â–∞–º–∏" –∏–∑ –ø–∞—Ä–∞–≥—Ä–∞—Ñ–∞ {args[0]} –ø–æ –§–∏–∑–∏–∫–µ')
                case '–∑–∞–¥–∞—á–∞':
                    builder = findgdz(f'https://megaresheba.ru/index/05/0-358/7-{args[0]}',
                                      'https://megaresheba.ru/attachments/images/tasks/000/003/672/0000/654b5',
                                      f'–í–æ—Ç –≤–∞—à–µ –≥–¥–∑ –¥–ª—è –∑–∞–¥–∞—á–∏ {args[0]} –ø–æ –§–∏–∑–∏–∫–µ')

            await message.reply_media_group(builder.build())

        except IndexError:
            await message.reply(
                '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: <code>/physics –Ω–æ–º–µ—Ä –ø–∞—Ä/—É–ø—Ä/–∑–∞–¥/–ª–∞–±/–æ–±—Å/'
                '–∑–∞–¥–∞—á–∞ *–ø–æ–¥–Ω–æ–º–µ—Ä</code>\n'
                '–ü–æ—è—Å–Ω–µ–Ω–∏—è: \n'
                '–ø–∞—Ä-–ø–∞—Ä–∞–≥—Ä–∞—Ñ. /physics –Ω–æ–º–µ—Ä –ø–∞—Ä\n'
                '—É–ø—Ä-—É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ. /physics –Ω–æ–º–µ—Ä —É–ø—Ä –ø–æ–¥–Ω–æ–º–µ—Ä\n'
                '–∑–∞–¥-–∑–∞–¥–∞–Ω–∏–µ. /physics –Ω–æ–º–µ—Ä_–ø–∞—Ä–∞–≥—Ä–∞—Ñ–∞ –∑–∞–¥\n'
                '–ª–∞–±-–ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞. /physics –Ω–æ–º–µ—Ä –ª–∞–±\n'
                '–æ–±—Å-–æ–±—Å—É–¥–∏ —Å —Ç–æ–≤–∞—Ä–∏—â–∞–º–∏. /physics –Ω–æ–º–µ—Ä_–ø–∞—Ä–∞–≥—Ä–∞—Ñ–∞ –æ–±—Å\n'
                '–∑–∞–¥–∞—á–∞-–∑–∞–¥–∞—á–∞ –¥–ª—è –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è. /physics –Ω–æ–º–µ—Ä –∑–∞–¥–∞—á–∞')

    except Exception as e:
        await error_admin(bot, message, e)


@gdz_router.message(Command('russian'))
async def cmd_russian(message: Message, command: CommandObject, bot: Bot):
    try:
        if not command.args:
            return await message.reply('–ù–µ—Ç –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤!')
        if not command.args.isnumeric():
            return await message.reply('–ê—Ä–≥—É–º–µ–Ω—Ç - –Ω–µ —á–∏—Å–ª–æ!')

        args = command.args.split()
        if len(args) > 1:
            return await message.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø—Ä–∞—à–∏–≤–∞–π—Ç–µ —Ç–æ–ª—å–∫–æ 1 –∑–∞–¥–∞–Ω–∏–µ –≤ 1 —Å–æ–æ–±—â–µ–Ω–∏–∏.')

        await message.reply_media_group(get_russian(args[0]).build())

    except Exception as e:
        await error_admin(bot, message, e)


@gdz_router.message(Command('english'))
async def cmd_english(message: Message, command: CommandObject, bot: Bot):
    try:
        if not command.args:
            return await message.reply('–ù–µ—Ç –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤!')
        if not command.args.isnumeric():
            return await message.reply('–ê—Ä–≥—É–º–µ–Ω—Ç - –Ω–µ —á–∏—Å–ª–æ!')

        args = command.args.split()
        if len(args) > 1:
            return await message.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø—Ä–∞—à–∏–≤–∞–π—Ç–µ —Ç–æ–ª—å–∫–æ 1 —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ 1 —Å–æ–æ–±—â–µ–Ω–∏–∏.')

        await message.reply_media_group(get_english(args[0]).build())

    except Exception as e:
        await error_admin(bot, message, e)


@gdz_router.message(Command('hwsupports'))
async def cmd_hwsupports(message: Message, bot: Bot):
    try:
        await message.answer('–ü—Ä–µ–¥–º–µ—Ç—ã, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –±–æ—Ç–æ–º (üì∞ –æ–∑–Ω–∞—á–∞–µ—Ç —Ç–æ, —á—Ç–æ –≤ /homework —ç—Ç–æ—Ç –ø—Ä–µ–¥–º–µ—Ç '
                             '–±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å):\n'
                             '‚úÖ –ê–ª–≥–µ–±—Ä–∞ (100% –≥–æ—Ç–æ–≤–æ)\n'
                             '‚úÖ –ì–µ–æ–º–µ—Ç—Ä–∏—è (100% –≥–æ—Ç–æ–≤–æ)\n'
                             '‚úÖ –§–∏–∑–∏–∫–∞ (100% –≥–æ—Ç–æ–≤–æ)\n'
                             '‚úÖ –†—É—Å—Å–∫–∏–π —è–∑—ã–∫ (100% –≥–æ—Ç–æ–≤–æ)\n'
                             '‚úÖ –ê–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫ (100% –≥–æ—Ç–æ–≤–æ)\n'
                             '‚ùì –ë–∏–æ–ª–æ–≥–∏—è (0% –≥–æ—Ç–æ–≤–æ)\n'
                             '‚ùì –•–∏–º–∏—è (0% –≥–æ—Ç–æ–≤–æ)\n'
                             '‚ùì –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ (0% –≥–æ—Ç–æ–≤–æ)\n'
                             '‚ùì (0% –≥–æ—Ç–æ–≤–æ)\n'
                             '‚ùì (0% –≥–æ—Ç–æ–≤–æ)\n')
    except Exception as e:
        await error_admin(bot, message, e)
